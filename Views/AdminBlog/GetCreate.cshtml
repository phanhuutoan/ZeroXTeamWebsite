@model ZeroXTeam.Models.BlogViewModel

@{
  var isEdit = ViewData["EditMode"] != null;
  var blog = ViewData["Blog"] as ZeroXTeam.Entities.Blog;

  var title = !isEdit ? "Create Blog" : "Edit Blog";
  var buttonTitle = !isEdit ? "Create" : "Edit";

  var formAction = isEdit ? "/admin/blogs/edit/" + blog.Id : "/admin/blogs/create";
}

<div class="container" style="margin-top: 3rem">
  <div class="row">
    <form action="@formAction" method="POST" class="col-md-6 col-sm-12" enctype="multipart/form-data" >
      <h3> @title </h3>
      @if (isEdit)
      {
        <input type="hidden" value="@blog?.Id" name="Id">          
      }
      <div class="form-group">
        <label for="Name">Name</label>
        <input type="text" asp-for="Name" class="form-control" value="@blog?.Name">
      </div>
      <div class="form-group">
        <label for="Brief">Brief</label>
        <textarea rows="3" class="form-control" name="Brief">@blog?.Brief</textarea>
      </div>
      <div class="form-group">
        <label for="Photo">Blog Photo</label>
        <input type="file" asp-for="Photo" class="form-control">
      </div>
      <div class="form-group">
        <label for="Content">Content</label>
        <div id="editor">
          <p>Hello World!</p>
          <p>Some initial <strong>bold</strong> text</p>
        </div>
        <input type="hidden" asp-for="Content" name="Content" value="@blog?.Content">
      </div>
      <div class="form-group">
        <label for="Author">Author</label>
        <input type="text" asp-for="Author" class="form-control" value="@blog?.Author">
      </div>
      
      <button class="btn btn-primary">@buttonTitle</button>
    </form>
    @if(isEdit)
    {
      <div class="col-md-6 col-sm-12">
        <div>
          <h3> Avatar: </h3>
          <img src="@blog?.PhotoUrl" alt="photo" class="image-thumbnail" style="height: 20rem;">
        </div>
      </div>
    }
  </div>
</div>
<!-- Initialize Quill editor -->
<script>
  const toolbarOptions = [
    ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
    ['blockquote', 'code-block'],

    [{ 'header': 1 }, { 'header': 2 }],               // custom button values
    [{ 'list': 'ordered'}, { 'list': 'bullet' }],
    [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
    [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
    [{ 'direction': 'rtl' }],                         // text direction
    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

    [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
    [{ 'font': [] }],
    [{ 'align': [] }],

    ['clean']                                         // remove formatting button
  ];

  const contentControl = document.querySelector("[name=Content]")

  const quill = new Quill('#editor', {
    theme: 'snow',
    modules: {
      toolbar: toolbarOptions
    },
  });

  if (contentControl.value) {
    quill.setContents(JSON.parse(contentControl.value));
  }

  quill.on('editor-change', () => {
    contentControl.value = JSON.stringify(quill.getContents().ops)
  })
</script>